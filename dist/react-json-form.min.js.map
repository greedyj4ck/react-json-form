{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/components/icons.js","../src/components/widgets.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema, getRef) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        \n        let isRef = value.hasOwnProperty('$ref');\n        \n        if (isRef)\n            value = getRef(value['$ref']);\n\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = isRef ? [] : getBlankArray(value, getRef);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value, getRef);\n        else if (type === 'boolean')\n            keys[key] = value.default || false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = value.default || null;\n        else // string etc.\n            keys[key] = value.default || '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema, getRef) {\n    if (schema.default)\n        return schema.default;\n\n    let items = [];\n\n    let minItems = schema.minItems || schema.min_items || 0;\n\n    if (minItems === 0)\n        return items;\n\n    if (schema.items.hasOwnProperty('$ref')) {\n        // :TODO: this will most probably mutate the original schema\n        // but i'll fix it later\n        schema.items = getRef(schema.items['$ref']);\n    }\n\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        items.push(getBlankArray(schema.items, getRef))\n        return items;\n    }\n    else if (type === 'object') {\n        items.push(getBlankObject(schema.items, getRef));\n        return items;\n    }\n\n    if (schema.items.widget === 'multiselect')\n        return items;\n\n    if (type === 'boolean')\n        items.push(schema.items.default || false);\n    else if (type === 'integer' || type === 'number')\n        items.push(schema.items.default || null);\n    else // string, etc.\n        items.push(schema.items.default || '');\n\n    return items;\n}\n\n\nexport function getBlankData(schema, getRef) {\n    if (schema.hasOwnProperty('$ref'))\n        schema = getRef(schema['$ref']);\n\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema, getRef);\n    else if (type === 'object')\n        return getBlankObject(schema, getRef);\n    else if (type === 'boolean')\n        return schema.default || false;\n    else if (type === 'integer' || type === 'number')\n        return schema.default || null;\n    else // string, etc.\n        return schema.default || '';\n}\n\n\n\nfunction getSyncedArray(data, schema, getRef) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    if (schema.items.hasOwnProperty('$ref')) {\n        // :TODO: this will most probably mutate the original schema\n        // but i'll fix it later\n        schema.items = getRef(schema.items['$ref'])\n    }\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items, getRef);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items, getRef);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema, getRef) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        \n        let isRef = schemaValue.hasOwnProperty('$ref');\n        \n        if (isRef)\n            schemaValue = getRef(schemaValue['$ref']);\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue, getRef);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue, getRef);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue, getRef);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue, getRef);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema, getRef) {\n    // adds those keys to data which are in schema but not in data\n\n    if (schema.hasOwnProperty('$ref'))\n        schema = getRef(schema['$ref']);\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema, getRef);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema, getRef);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export default function Icon(props) {\n    let icon;\n\n    switch (props.name) {\n        case 'chevron-up':\n            icon = <ChevronUp />;\n            break;\n        case 'chevron-down':\n            icon = <ChevronDown />;\n            break;\n    }\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={\"rjf-icon rjf-icon-\" + props.name} viewBox=\"0 0 16 16\">\n            {icon}\n        </svg>\n    );\n}\n\nfunction ChevronUp(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n    );\n}\n\nfunction ChevronDown(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n    );\n}\n","import Button from './buttons';\nimport Icon from './icons';\n\n\nexport class TimePicker extends React.Component {\n    componentWillUnmount() {\n        let data = {\n            hh: this.validateValue('hh', this.props.hh).toString().padStart(2, '0'),\n            mm: this.validateValue('mm', this.props.mm).toString().padStart(2, '0'),\n            ss: this.validateValue('ss', this.props.ss).toString().padStart(2, '0')\n        }\n        this.sendValue(data);\n    }\n\n    sendValue = (data) => {\n        this.props.onChange(data);\n    }\n\n    validateValue = (name, value) => {\n        if (name === 'hh' && value < 1)\n            return 1;\n        else if (name !== 'hh' && value < 0)\n            return 0;\n        else if (name === 'hh' && value > 12)\n            return 12;\n        else if (name !== 'hh' && value > 59)\n            return 59;\n\n        return value;\n    }\n\n    handleChange = (e) => {\n        let name = e.target.dataset.name;\n        let value = e.target.value;\n\n        if (isNaN(value))\n            return;\n\n        let validValue = this.validateValue(name, parseInt(value) || 0);\n\n        if (name === 'hh' && (value === '0' || value === '' || value === '00') && validValue === 1)\n            validValue = 0;\n\n        if (value.startsWith('0') && validValue < 10 && validValue !== 0) {\n            validValue = validValue.toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value !== '' ? validValue.toString() : ''});\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode !== 38 && e.keyCode !== 40)\n            return;\n\n        let name = e.target.dataset.name;\n        let value = parseInt(e.target.value) || 0;\n\n        if (e.keyCode === 38) {\n            value++;\n        } else if (e.keyCode === 40) {\n            value--;\n        }\n\n        this.sendValue({[name]: this.validateValue(name, value).toString().padStart(2, '0')});\n    }\n\n    handleSpin = (name, type) => {\n        let value = this.props[name];\n\n        if (name === 'ampm') {\n            value = value === 'am' ? 'pm': 'am';\n        } else {\n            value = parseInt(value) || 0;\n            if (type === 'up') {\n                value++;\n            } else {\n                value--;\n            }\n            value = this.validateValue(name, value).toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value});\n    }\n\n    handleBlur = (e) => {\n        let value = this.validateValue(e.target.dataset.name, parseInt(e.target.value) || 0);\n\n        if (value < 10) {\n            this.sendValue({[e.target.dataset.name]: value.toString().padStart(2, '0')});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-time-picker\">\n                <div className=\"rjf-time-picker-row rjf-time-picker-labels\">\n                    <div className=\"rjf-time-picker-col\">Hrs</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Min</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Sec</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">am/pm</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'up')}><Icon name=\"chevron-up\"/></Button></div> \n                </div>\n\n                <div className=\"rjf-time-picker-row rjf-time-picker-values\">\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"hh\" value={this.props.hh} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"mm\" value={this.props.mm} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"ss\" value={this.props.ss} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">{this.props.ampm}</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'down')}><Icon name=\"chevron-down\"/></Button></div> \n                </div>\n            </div>\n        );\n    }\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    let csrfCookies = document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0);\n\n    if (csrfCookies.length) {\n        return csrfCookies[0].split('=')[1];\n    } else {\n        // if no cookie found, get the value from the csrf form input\n        let input = document.querySelector('input[name=\"csrfmiddlewaretoken\"]');\n        if (input)\n            return input.value;\n    }\n\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {TimePicker} from './widgets';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <div className=\"rjf-input-group\">\n                <input {...props} />\n                {help_text && <span className=\"rjf-help-text\">{help_text}</span>}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div className=\"rjf-check-input\">\n            <label><input {...props} /> {label}</label>\n            {help_text && <span className=\"rjf-help-text\">{help_text}</span>}\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div className=\"rjf-check-input\">\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n            {help_text && <span className=\"rjf-help-text\">{help_text}</span>}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <div className=\"rjf-input-group\">\n                <select value={value || ''} {...props}>\n                    <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                    {options.map((option, i) => {\n                        let label, inputValue;\n                        if (typeof option === 'object') {\n                            label = option.label;\n                            inputValue = option.value;\n                        } else {\n                            label = option;\n                            if (typeof label === 'boolean')\n                                label = capitalize(label.toString());\n                            inputValue = option;\n                        }\n\n                        return (\n                            <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                                {label}\n                            </option>\n                        );\n                    })}\n                </select>\n                {help_text && <span className=\"rjf-help-text\">{help_text}</span>}\n            </div>\n        </div>\n    );\n}\n\nexport class FormMultiSelectInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showOptions: false\n        };\n\n        this.optionsContainer = React.createRef();\n        this.input = React.createRef();\n    }\n\n    handleChange = (e) => {\n        let value = [...this.props.value];\n\n        if (e.target.checked) {\n            value.push(e.target.value);\n        } else {\n            value = value.filter((item) => item !== e.target.value);\n        }\n\n        let event = {\n            target: {\n                type: this.props.type,\n                value: value,\n                name: this.props.name\n            }\n        };\n\n        this.props.onChange(event);\n    }\n\n    showOptions = (e) => {\n        if (!this.state.showOptions)\n            this.setState({showOptions: true});\n    }\n\n    hideOptions = (e) => {\n        this.setState({showOptions: false});\n    }\n\n    toggleOptions = (e) => {\n        this.setState((state) => ({showOptions: !state.showOptions}))\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-multiselect-field\">\n                <FormInput\n                    label={this.props.label}\n                    type=\"text\"\n                    value={this.props.value.length ? this.props.value.length + ' selected' : 'Select...'}\n                    help_text={this.props.help_text}\n                    error={this.props.error}\n                    onClick={this.toggleOptions}\n                    readOnly={true}\n                    inputRef={this.input}\n                    className=\"rjf-multiselect-field-input\"\n                />\n                {this.state.showOptions &&\n                    <FormMultiSelectInputOptions\n                        options={this.props.options}\n                        value={this.props.value}\n                        hideOptions={this.hideOptions}\n                        onChange={this.handleChange}\n                        containerRef={this.optionsContainer}\n                        inputRef={this.input}\n                        disabled={this.props.readOnly}\n                        hasHelpText={this.props.help_text && 1}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nclass FormMultiSelectInputOptions extends React.Component {\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.props.containerRef.current &&\n            !this.props.containerRef.current.contains(e.target) &&\n            !this.props.inputRef.current.contains(e.target)\n        )\n            this.props.hideOptions();\n    };\n\n    render() {\n        return (\n            <div ref={this.props.containerRef}>\n                <div\n                    className=\"rjf-multiselect-field-options-container\"\n                    style={this.props.hasHelpText ? {marginTop: '-15px'} : {}}\n                >\n                    {this.props.options.map((option, i) => {\n                        let label, inputValue;\n                        if (typeof option === 'object') {\n                            label = option.label;\n                            inputValue = option.value;\n                        } else {\n                            label = option;\n                            if (typeof label === 'boolean')\n                                label = capitalize(label.toString());\n                            inputValue = option;\n                        }\n\n                        let selected = this.props.value.indexOf(inputValue) > -1;\n\n                        let optionClassName = 'rjf-multiselect-field-option';\n                        if (selected)\n                            optionClassName += ' selected';\n                        if (this.props.disabled)\n                            optionClassName += ' disabled';\n\n                        return (\n                            <div key={label + '_' + inputValue + '_' + i} className={optionClassName}>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        onChange={this.props.onChange}\n                                        value={inputValue}\n                                        checked={selected}\n                                        disabled={this.props.disabled}\n                                    /> {label}\n                                </label>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    clearFile = () => {\n        if (window.confirm('Do you want to remove this file?')) {\n            let event = {\n                target: {\n                    type: 'text',\n                    value: '',\n                    name: this.props.name\n                }\n            };\n\n            this.props.onChange(event);\n            \n            if (this.inputRef.current)\n                this.inputRef.current.value = '';\n        }\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        if (props.readOnly)\n            props.disabled = true;\n\n        return (\n            <div> \n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">\n                            Current file: <span>{this.state.fileName}</span> {' '}\n                            <Button className=\"remove-file\" onClick={this.clearFile}>Clear</Button>\n                        </div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport class FormTextareaInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.inputRef)\n            this.updateHeight(this.props.inputRef.current);\n        else \n            this.updateHeight(this.inputRef.current);\n    }\n\n    render() {\n        let {label, help_text, error, inputRef, ...props} = this.props;\n\n        delete props.type;\n\n        props.ref = inputRef || this.inputRef;\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <div className=\"rjf-input-group\">\n                    <textarea {...props} />\n                    {help_text && <span className=\"rjf-help-text\">{help_text}</span>}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport class FormDateTimeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // we maintain this input's state in itself\n        // so that we can only pass valid values\n        // otherwise keep the value empty if invalid\n\n        this.state = {\n            ...this.getStateFromProps(),\n            showTimePicker: false,\n        };\n\n        this.timeInput = React.createRef();\n        this.timePickerContainer = React.createRef();\n    }\n\n    getStateFromProps = () => {\n        let date = '';\n        let hh = '12';\n        let mm = '00';\n        let ss = '00';\n        let ms = '000';\n        let ampm = 'am';\n\n        if (this.props.value) {\n            let d = new Date(this.props.value);\n            let year = d.getFullYear().toString().padStart(2, '0');\n            let month = (d.getMonth() + 1).toString().padStart(2, '0');\n            let day = d.getDate().toString().padStart(2, '0');\n            date = year + '-' + month + '-' + day;\n\n            hh = d.getHours();\n            if (hh === 0) {\n                hh = 12;\n            } else if (hh === 12) {\n                ampm = 'pm';\n            } else if (hh > 12) {\n                hh = hh - 12;\n                ampm = 'pm';\n            }\n\n            mm = d.getMinutes();\n            ss = d.getSeconds();\n            ms = d.getMilliseconds();\n\n            hh = hh.toString().padStart(2, '0');\n            mm = mm.toString().padStart(2, '0');\n            ss = ss.toString().padStart(2, '0');\n        }\n\n        return {\n            date: date, hh: hh, mm: mm, ss: ss, ms: ms, ampm: ampm\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.value !== this.props.value) {\n            if (this.state.hh !== '' && this.state.hh !== '0' && this.state.hh !== '00') {\n\n                let changed = false;\n                let newState = this.getStateFromProps();\n                \n                for (let key in newState) {\n                    if (newState[key] !== this.state[key]) {\n                        changed = true;\n                        break;\n                    }\n                }\n\n                if (changed)\n                    this.setState({...newState});\n            }\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.state.showTimePicker) {\n            if (this.timePickerContainer.current &&\n                !this.timePickerContainer.current.contains(e.target) &&\n                !this.timeInput.current.contains(e.target)\n            )\n                this.setState({showTimePicker: false});\n        }\n    };\n\n    sendValue = () => {\n        // we create a fake event object\n        // to send a combined value from two inputs\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        if (this.state.date === '' || this.state.date === null)\n            return this.props.onChange(event);\n\n        let hh = parseInt(this.state.hh);\n\n        if (hh === 0)\n            hh = NaN; // zero value is invalid for 12 hour clock, but will be valid for 24 hour clock\n                      // so we set it to NaN to prevent creating a date object\n        \n        if (this.state.ampm === 'am') {\n            if (hh === 12)\n                hh = 0;\n        } else if (this.state.ampm === 'pm') {\n            if (hh !== 12)\n                hh = hh + 12;\n        }\n\n        hh = hh.toString().padStart(2, '0');\n        let mm = this.state.mm.padStart(2, '0');\n        let ss = this.state.ss.padStart(2, '0');\n\n        try {\n            let date = new Date(this.state.date + 'T' + hh + ':' + mm + ':' + ss + '.' + this.state.ms);\n            event['target']['value'] = date.toISOString().replace('Z', '+00:00') // make compatible to python\n        } catch (err) {\n            // invalid date\n            return this.props.onChange(event);\n        }\n\n        this.props.onChange(event);\n    }\n\n    handleDateChange = (e) => {\n        this.setState({date: e.target.value}, this.sendValue);\n    }\n\n    handleTimeChange = (value) => {\n        this.setState({...value}, this.sendValue);\n    }\n\n    showTimePicker = () => {\n        this.setState({showTimePicker: true});\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-datetime-field\">\n                {this.props.label && <label>{this.props.label}</label>}\n                <div className=\"rjf-datetime-field-inner\">\n                    <div className=\"rjf-datetime-field-inputs\">\n                        <div className=\"rjf-datetime-field-date\">\n                            <FormInput\n                                label='Date'\n                                type='date'\n                                value={this.state.date}\n                                onChange={this.handleDateChange}\n                            />\n                        </div>\n                        <div className=\"rjf-datetime-field-time\">\n                            <FormInput\n                                label='Time'\n                                type='text'\n                                value={this.state.hh + ':' + this.state.mm + ':' + this.state.ss + ' ' + this.state.ampm}\n                                onFocus={this.showTimePicker}\n                                readOnly={true}\n                                inputRef={this.timeInput}\n                            />\n                            <div ref={this.timePickerContainer}>\n                                {this.state.showTimePicker &&\n                                    <TimePicker\n                                        onChange={this.handleTimeChange}\n                                        hh={this.state.hh}\n                                        mm={this.state.mm}\n                                        ss={this.state.ss}\n                                        ampm={this.state.ampm}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    {this.props.help_text && <span className=\"rjf-help-text\">{this.props.help_text}</span>}\n                </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">\n            {props.editable ?\n                <span>{props.children} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.children\n            }\n        </div>\n    );\n}\n\n\nfunction animate(e, animation, callback) {\n    let el = e.target.parentElement.parentElement;\n    let prevEl = el.previousElementSibling;\n    let nextEl = el.nextElementSibling;\n\n    el.classList.add('rjf-animate', 'rjf-' + animation);\n\n    if (animation === 'move-up') {\n        let {y, height} = prevEl.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = el.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        prevEl.classList.add('rjf-animate');\n\n        prevEl.style.opacity = 0;\n        prevEl.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n    } else if (animation === 'move-down') {\n        let {y, height} = el.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = nextEl.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        nextEl.classList.add('rjf-animate');\n\n        nextEl.style.opacity = 0;\n        nextEl.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n    }\n\n    setTimeout(function() {\n        callback();\n        \n        el.classList.remove('rjf-animate', 'rjf-' + animation);\n        el.style = null;\n\n        if (animation === 'move-up') {\n            prevEl.classList.remove('rjf-animate');\n            prevEl.style = null;\n        }\n        else if (animation === 'move-down') {\n            nextEl.classList.remove('rjf-animate');\n            nextEl.style = null;\n        }\n    }, 200);\n}\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={(e) => animate(e, 'move-up', props.onMoveUp)}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={(e) => animate(e, 'move-down', props.onMoveDown)}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => animate(e, 'remove', props.onRemove)}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle editable={props.editable} onEdit={props.onEdit}>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle editable={props.editable} onEdit={props.onEdit}>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title={props.schema.type === 'object' ? 'Add new key' : 'Add new item'}\n                >\n                    {props.schema.type === 'object' ? 'Add key' : 'Add item'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, GroupTitle, FormRowControls, FormTextareaInput,\n    FormDateTimeInput, FormMultiSelectInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n        readOnly: props.schema.readOnly || props.schema.readonly,\n        help_text: props.schema.help_text || props.schema.helpText,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget) {\n         if (props.schema.widget === 'multiselect' && props.parentType !== 'array') {\n            // pass\n         } else {\n            type = props.schema.widget;\n         }\n    }\n\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                } else if (props.schema.format === 'datetime') {\n                    InputField = FormDateTimeInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'multiselect':\n            InputField = FormMultiSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown, parentType, ...fieldProps\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n                parentType={parentType}\n                {...fieldProps}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let isRef = schema.items.hasOwnProperty('$ref');\n\n    if (isRef)\n        schema.items = args.getRef(schema.items['$ref']);\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n        parentType: 'array',\n        getRef: args.getRef\n    };\n\n    if (nextArgs.schema.widget === 'multiselect') {\n        nextArgs.data = data;\n        nextArgs.name = name;\n        nextArgs.removable = false;\n        nextArgs.onMoveUp = null;\n        nextArgs.onMoveDown = null;\n        addable = false;\n        rows.push(getStringFormRow(nextArgs));\n    } else {\n\n        for (let i = 0; i < data.length; i++) {\n            nextArgs.data = data[i];\n            nextArgs.name = name + '-' + i;\n\n            if (i === 0)\n                nextArgs.onMoveUp = null;\n            else\n                nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n            if (i === data.length - 1)\n                nextArgs.onMoveDown = null;\n            else\n                nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));\n\n            if (type === 'array') {\n                groups.push(getArrayFormRow(nextArgs));\n            } else if (type === 'object') {\n                groups.push(getObjectFormRow(nextArgs));\n            } else {\n                rows.push(getStringFormRow(nextArgs));\n            } \n        }\n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items, args.getRef), coords)}\n                editable={args.editable}\n                onEdit={args.onEdit}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n\n        if (args.parentType === 'object' && args.removable) {\n            rows = (\n                <div className=\"rjf-form-group-wrapper\" key={'row_group_wrapper_' + name}>\n                    <FormRowControls\n                        onRemove={(e) => onRemove(name)}\n                    />\n                    {rows}\n                </div>\n            );\n        }\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <GroupTitle editable={args.editable} onEdit={args.onEdit}>{schema.title}</GroupTitle> : null;\n\n        groups = (\n            <div key={'group_' + name} className=\"rjf-form-group-wrapper\">\n                {args.parentType === 'object' && args.removable &&\n                    <FormRowControls\n                        onRemove={(e) => onRemove(name)}\n                    />\n                }\n                <div className=\"rjf-form-group\">\n                    <div className={level > 0 ? \"rjf-form-group-inner\" : \"\"}>\n                        {groupTitle}\n                        {groups.map((i, index) => (\n                            <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                                <FormRowControls\n                                    onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                                    onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                                    onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                                />\n                                {i}\n                            </div>\n                            )\n                        )}\n                        {addable && \n                            <Button\n                                className=\"add\"\n                                onClick={(e) => onAdd(getBlankData(schema.items, args.getRef), coords)}\n                                title=\"Add new item\"\n                            >\n                                Add item\n                            </Button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key];\n\n        if (typeof schemaValue === 'undefined') {\n            // for keys added through additionalProperties\n            if (typeof schema.additionalProperties === 'boolean')\n                schemaValue = {type: 'string'};\n            else\n                schemaValue = {...schema.additionalProperties};\n        }\n\n        let isRef = schemaValue.hasOwnProperty('$ref');\n\n        if (isRef)\n            schemaValue = args.getRef(schemaValue['$ref']);\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title || (isRef && schema.additionalProperties)) // for additionalProperty refs, use the key as the title\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove,\n            parentType: 'object',\n            getRef: args.getRef,\n        };\n\n        nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n        nextArgs.editable = removable;\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd, schema.additionalProperties, args.getRef)}\n                editable={args.editable}\n                onEdit={args.onEdit}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n        if (args.parentType === 'object' && args.removable) {\n            rows = (\n                <div className=\"rjf-form-group-wrapper\" key={'row_group_wrapper_' + name}>\n                    <FormRowControls\n                        onRemove={(e) => onRemove(name)}\n                    />\n                    {rows}\n                </div>\n            );\n        }\n\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd, newSchema, getRef) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    if (newSchema === true)\n        newSchema = {type: 'string'};\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(getBlankData(newSchema, getRef), coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    let newCoords = coords.split('-');\n    newCoords.pop();\n    newCoords.push(newKey);\n    newCoords = newCoords.join('-');\n\n    onAdd(value, newCoords);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema, this.getRef);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema, this.getRef);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getRef = (ref) => {\n        /* Returns schema reference. Nothing to do with React's refs.*/\n\n        let refSchema;\n        let tokens = ref.split('/');\n\n        for (let i = 0; i < tokens.length; i++) {\n            let token = tokens[i];\n\n            if (token === '#')\n                refSchema = this.schema;\n            else\n                refSchema = refSchema[token];\n        }\n\n\n        return {...refSchema};\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0,\n                getRef: this.getRef,\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","getRef","keys","schema_keys","properties","key","value","isRef","hasOwnProperty","type","getBlankArray","items","minItems","min_items","push","widget","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","Button","className","props","classes","split","React","trim","children","Loader","Icon","icon","name","ChevronUp","ChevronDown","xmlns","width","height","fill","viewBox","fillRule","d","TimePicker","sendValue","_this","onChange","validateValue","handleChange","e","target","dataset","isNaN","validValue","parseInt","startsWith","toString","padStart","handleKeyDown","keyCode","handleSpin","handleBlur","componentWillUnmount","hh","this","mm","ss","render","onClick","_this2","onBlur","onKeyDown","ampm","Component","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","getCsrfCookie","csrfCookies","document","cookie","filter","indexOf","input","querySelector","FormInput","label","help_text","inputRef","ref","FormCheckInput","undefined","checked","readOnly","disabled","FormRadioInput","options","map","option","inputValue","FormSelectInput","FormMultiSelectInput","showOptions","state","setState","hideOptions","toggleOptions","optionsContainer","createRef","error","FormMultiSelectInputOptions","containerRef","hasHelpText","handleClickOutside","current","contains","componentDidMount","addEventListener","removeEventListener","style","marginTop","selected","_this3","optionClassName","FormFileInput","_this4","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","file","files","fileName","reader","FileReader","onload","event","result","readAsDataURL","endpoint","context","fileUploadEndpoint","console","alert","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","body","then","response","json","file_path","showFileBrowser","click","clearFile","confirm","componentDidUpdate","prevProps","prevState","contextType","FormTextareaInput","_this5","updateHeight","el","offset","offsetHeight","clientHeight","scrollHeight","FormDateTimeInput","_this6","getStateFromProps","date","ms","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","showTimePicker","timePickerContainer","timeInput","NaN","toISOString","err","handleDateChange","handleTimeChange","changed","newState","onFocus","GroupTitle","editable","onEdit","title","animate","animation","callback","parentElement","prevEl","previousElementSibling","nextEl","nextElementSibling","classList","add","y","getBoundingClientRect","y1","y2","opacity","transform","setTimeout","remove","FormRowControls","onMoveUp","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","readonly","helpText","choices","parentType","format","step","fieldType","Number","getStringFormRow","args","removable","fieldProps","getArrayFormRow","onMove","rows","groups","max_items","maxItems","nextArgs","getObjectFormRow","coords","groupTitle","index","additionalProperties","k","childName","getVerboseName","newKey","prompt","newCoords","pop","join","handleKeyEdit","newSchema","handleKeyValueAdd","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","refSchema","tokens","token","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","moveDataUsingCoords","getElementById","dataInputId","getSyncedData","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}